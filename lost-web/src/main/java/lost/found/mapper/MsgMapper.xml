<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="lost.found.mapper.MsgMapper" >
  <resultMap id="BaseResultMap" type="lost.found.pojo.Msg" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="createtime" property="createtime" jdbcType="DATE" />
    <result column="uid" property="uid" jdbcType="INTEGER" />
    <result column="hid" property="hid" jdbcType="INTEGER" />
    <result column="iid" property="iid" jdbcType="INTEGER" />
    <result column="pid" property="pid" jdbcType="INTEGER" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="lost.found.pojo.Msg" extends="BaseResultMap" >
    <result column="msg" property="msg" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, status, createtime, uid, hid, iid, pid
  </sql>
  <sql id="Blob_Column_List" >
    msg
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="lost.found.pojo.MsgExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from msg
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
   <select id="getSumCount" resultType="int" parameterType="int">
  
   SELECT COUNT(*) FROM msg where uid=#{uid}
  
  </select>
   <select id="getPageMsg" resultType="lost.found.pojo.Msg" >
SELECT 
  `id`,
  `msg`,
  `status`,
  `createtime`,
  `uid`,
  `hid`,
  `iid`,
  `pid`
  FROM
  `lostandfound`.`msg` 
  where uid=#{uid}
LIMIT #{now},#{pagesize};
</select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="lost.found.pojo.MsgExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from msg
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from msg
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from msg
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="lost.found.pojo.MsgExample" >
    delete from msg
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="lost.found.pojo.Msg" >
    insert into msg (id, status, createtime, 
      uid, hid, iid, pid, 
      msg)
    values (#{id,jdbcType=INTEGER}, #{status,jdbcType=INTEGER}, #{createtime,jdbcType=DATE}, 
      #{uid,jdbcType=INTEGER}, #{hid,jdbcType=INTEGER}, #{iid,jdbcType=INTEGER}, #{pid,jdbcType=INTEGER}, 
      #{msg,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="lost.found.pojo.Msg" >
    insert into msg
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="createtime != null" >
        createtime,
      </if>
      <if test="uid != null" >
        uid,
      </if>
      <if test="hid != null" >
        hid,
      </if>
      <if test="iid != null" >
        iid,
      </if>
      <if test="pid != null" >
        pid,
      </if>
      <if test="msg != null" >
        msg,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="createtime != null" >
        #{createtime,jdbcType=DATE},
      </if>
      <if test="uid != null" >
        #{uid,jdbcType=INTEGER},
      </if>
      <if test="hid != null" >
        #{hid,jdbcType=INTEGER},
      </if>
      <if test="iid != null" >
        #{iid,jdbcType=INTEGER},
      </if>
      <if test="pid != null" >
        #{pid,jdbcType=INTEGER},
      </if>
      <if test="msg != null" >
        #{msg,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="lost.found.pojo.MsgExample" resultType="java.lang.Integer" >
    select count(*) from msg
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update msg
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.createtime != null" >
        createtime = #{record.createtime,jdbcType=DATE},
      </if>
      <if test="record.uid != null" >
        uid = #{record.uid,jdbcType=INTEGER},
      </if>
      <if test="record.hid != null" >
        hid = #{record.hid,jdbcType=INTEGER},
      </if>
      <if test="record.iid != null" >
        iid = #{record.iid,jdbcType=INTEGER},
      </if>
      <if test="record.pid != null" >
        pid = #{record.pid,jdbcType=INTEGER},
      </if>
      <if test="record.msg != null" >
        msg = #{record.msg,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update msg
    set id = #{record.id,jdbcType=INTEGER},
      status = #{record.status,jdbcType=INTEGER},
      createtime = #{record.createtime,jdbcType=DATE},
      uid = #{record.uid,jdbcType=INTEGER},
      hid = #{record.hid,jdbcType=INTEGER},
      iid = #{record.iid,jdbcType=INTEGER},
      pid = #{record.pid,jdbcType=INTEGER},
      msg = #{record.msg,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update msg
    set id = #{record.id,jdbcType=INTEGER},
      status = #{record.status,jdbcType=INTEGER},
      createtime = #{record.createtime,jdbcType=DATE},
      uid = #{record.uid,jdbcType=INTEGER},
      hid = #{record.hid,jdbcType=INTEGER},
      iid = #{record.iid,jdbcType=INTEGER},
      pid = #{record.pid,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="lost.found.pojo.Msg" >
    update msg
    <set >
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="createtime != null" >
        createtime = #{createtime,jdbcType=DATE},
      </if>
      <if test="uid != null" >
        uid = #{uid,jdbcType=INTEGER},
      </if>
      <if test="hid != null" >
        hid = #{hid,jdbcType=INTEGER},
      </if>
      <if test="iid != null" >
        iid = #{iid,jdbcType=INTEGER},
      </if>
      <if test="pid != null" >
        pid = #{pid,jdbcType=INTEGER},
      </if>
      <if test="msg != null" >
        msg = #{msg,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="lost.found.pojo.Msg" >
    update msg
    set status = #{status,jdbcType=INTEGER},
      createtime = #{createtime,jdbcType=DATE},
      uid = #{uid,jdbcType=INTEGER},
      hid = #{hid,jdbcType=INTEGER},
      iid = #{iid,jdbcType=INTEGER},
      pid = #{pid,jdbcType=INTEGER},
      msg = #{msg,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="lost.found.pojo.Msg" >
    update msg
    set status = #{status,jdbcType=INTEGER},
      createtime = #{createtime,jdbcType=DATE},
      uid = #{uid,jdbcType=INTEGER},
      hid = #{hid,jdbcType=INTEGER},
      iid = #{iid,jdbcType=INTEGER},
      pid = #{pid,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>