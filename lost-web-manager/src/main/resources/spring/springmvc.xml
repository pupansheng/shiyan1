<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:dubbo="http://code.alibabatech.com/schema/dubbo" 
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	 http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
     http://www.springframework.org/schema/mvc
     http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
      http://code.alibabatech.com/schema/dubbo http://code.alibabatech.com/schema/dubbo/dubbo.xsd
     http://www.springframework.org/schema/context  
     http://www.springframework.org/schema/context/spring-context-4.0.xsd">
     <!-- 加载资源文件 -->
     <context:property-placeholder location="classpath:conf/source.properties" /> 
     
     <!--包扫描 配置@controller扫描 -->
      <context:component-scan base-package="lost.found.controller"></context:component-scan>
 
      <!--配置驱动
      
           直接配置处理器映射器和处理器适配器比较麻烦，
          可以使用注解驱动来加载。
     SpringMVC使用<mvc:annotation-driven>自动加载RequestMappingHandlerMapping和RequestMappingHandlerAdapter
          可以在springmvc.xml配置文件中使用<mvc:annotation-driven>替代注解处理器和适配器的配置。 动 
           所以前面配置的处理器  适配器  不需要了
     -->
     <mvc:annotation-driven />
     
  



     <!-- 定义文件上传解析器 -->
	 <bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- 设定默认编码 -->
		<property name="defaultEncoding" value="UTF-8"></property>
		<!-- 设定文件上传的最大值5MB，5*1024*1024 -->
		<property name="maxUploadSize" value="5242880"></property>
	</bean>
	<!-- 时间格式转换 -->
	<!--   <bean id="c1" class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
      <property name="converters">
      <list>
      <bean  class="convert.Consertvert"></bean>
      </list>
      </property>
	  </bean>
	 -->
        <!-- 配置拦截器 -->
     <mvc:interceptors>
     <mvc:interceptor >
     <!-- 拦截器拦截资源规则 -->
     <mvc:mapping path="/user/**"/><!-- 带有/user/则进入拦截器  验证有没有登陆  没有登陆则转到登陆页面 -->
     <!-- 不包括文件 -->
       <mvc:exclude-mapping path="/**/fonts/*"/>
       <mvc:exclude-mapping path="/**/*.css"/>
       <mvc:exclude-mapping path="/**/*.js"/>
       <mvc:exclude-mapping path="/**/*.png"/>
       <mvc:exclude-mapping path="/**/*.gif"/>
       <mvc:exclude-mapping path="/**/*.jpg"/>
       <mvc:exclude-mapping path="/**/*.jpeg"/>
       <mvc:exclude-mapping path="/**/*login*"/>
       <mvc:exclude-mapping path="/**/*Login*"/>
    
       <bean  class="lost.found.intercept.Interceptor"></bean>
     </mvc:interceptor>
     
    </mvc:interceptors>
     
     <bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<!-- 配置逻辑视图的前缀 -->
		<property name="prefix" value="/WEB-INF/jsp/" />
		<!-- 配置逻辑视图的后缀 -->
		<property name="suffix" value=".jsp" />
	</bean>
	<!-- 配置资源映射  让网页中访问js或者其他资源时不必经过控制层 -->
	
	<mvc:resources location="/js/" mapping="/js/**"/>
	<mvc:resources location="/css/" mapping="/css/**"/>
    <mvc:resources location="/fonts/" mapping="/fonts/**"/>
	

     </beans>